/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package duan1.views;

import java.io.IOException;
import java.io.InputStream;

import javax.swing.JButton;
import javax.swing.UIManager;

import com.formdev.flatlaf.FlatLightLaf;

import duan1.config.Config;
import duan1.controllers.user.UserController;
import duan1.utils.Log;
import duan1.utils.SocketIO;
import io.socket.client.Socket;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Component;
import java.awt.BorderLayout;

/**
 *
 * @author nhatsdevil
 */
public class App extends javax.swing.JFrame {
    private SocketIO io = new SocketIO();
    private Socket socket = io.socket;
    private Component currentView;
    
    //*CONTROLLERS */
    private UserController userController = new UserController();

    /**
     * Creates new form App
     */
    public App() {
        initAssets();
        initComponents();
        init();
    }

    public <V> void navigate(Class<V> view) {
        View v;

        try {
            v = (View) view.newInstance();
            v.setSocket(socket);

            getContentPane().remove(currentView);
            getContentPane().add(BorderLayout.CENTER, v);
            getContentPane().revalidate();
            
            this.currentView = v;
        } catch (InstantiationException e) {
            Log.error(e);
        } catch (IllegalAccessException e) {
            Log.error(e);
        }
    }

    private void init() {
        this.setSize(1280, 770);

        sideBar2.setAppContext(this);

        ThemHoaDon hd = new ThemHoaDon();

        this.currentView = hd;

        getContentPane().add(BorderLayout.CENTER, hd);
    }

    private void initAssets() {
        try {
            InputStream ioniconStream = App.class.getResourceAsStream("/duan1/assets/fonts/ionicons.ttf");
            Font ioniconsFont = Font.createFont(Font.TRUETYPE_FONT, ioniconStream);
            
            Config.FONT_IONICONS = ioniconsFont.deriveFont(Font.PLAIN, 24f);

            Log.success("[ ASSETS LOADED SUCCESSFULLY ]", App.class.getName());
        } catch (IOException | FontFormatException e) {
            Log.error(e);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideBar2 = new duan1.components.SideBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        sideBar2.setPreferredSize(new java.awt.Dimension(250, 770));
        getContentPane().add(sideBar2, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Check USER Login
        try {
            userController.checkLogin();
        }catch(Exception e) {
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel( new FlatLightLaf() );

            Log.success("[ UI LOADED SUCCESSFULLY ]", Main.class.getName());
        }catch(Exception e) {
            Log.error(e);
        }
        // try {
        //     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        //         if ("Nimbus".equals(info.getName())) {
        //             javax.swing.UIManager.setLookAndFeel(info.getClassName());
        //             break;
        //         }
        //     }
        // } catch (ClassNotFoundException ex) {
        //     java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        // } catch (InstantiationException ex) {
        //     java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        // } catch (IllegalAccessException ex) {
        //     java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        // } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        //     java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        // }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private duan1.components.SideBar sideBar2;
    // End of variables declaration//GEN-END:variables
}
